@startuml Game Of Life

package "model" #DDDDDD {
    Interface Element {
        + isAlive() : boolean
        + toString() : String
    }

    Class Cell implements Element {
        - alive() : boolean
    }

    Interface Environment {
        + nextGeneration() : void
        + toString() : String
    }

    Class Grid implements Environment {
        - elements : Elements[1..*][1..*]
        + getNumberOfNeighboursAlive() : int
    }

    Environment "1" o-l- "*" Element : compose
}

package GUI {
    Class mainPanel{}
}

Interface Subscriber {
    + stateChanged : void
}

Class EnvironmentController {
    - Environment environment
    - ArrayList<Subscriber> subscribers
    + add(subscriber : Subscriber) : void
    + remove(subscriber : Subscriber) : void
    + notifySubscribers() : void
}

EnvironmentController <-l- model : notify
EnvironmentController -u-> model : update
EnvironmentController -d-> GUI : update
EnvironmentController <-d- GUI : notify
EnvironmentController "1" o-- "*" Subscriber : compose


@end